//
//  SpeekView.m
//  AlarmPolice
//
//  Created by AD-iOS on 15/12/8.
//  Copyright © 2015年 Adinnet. All rights reserved.
//

#import "SpeekView.h"
#import "RecordWaveView.h"
#import "WDRecorder.h"

@interface SpeekView ()<RecordWaveViewDelegate>
@property (strong, nonatomic) UILabel *stateLabel;
@property (strong, nonatomic) UIImageView *speekImgView;
@property (strong, nonatomic) UILabel *tipLabel;

@property (strong, nonatomic) UIImageView *deleteImgView;
@property (strong, nonatomic) UIView *verticalLineView;

@property (strong, nonatomic) RecordWaveView *recordWaveView;

@property (strong, nonatomic) WDRecorder *recorder;

@property (assign, nonatomic) BOOL isRecordSuccess;
@property (strong, nonatomic) NSURL *recordFileURL;

@property (copy, nonatomic) DidRecordCompletion completion;

@end

@implementation SpeekView

- (instancetype)initWithFrame:(CGRect)frame
{
    if (self = [super initWithFrame:frame]) {
        [self setupWidget];
    }
    return self;
}

#pragma mark - 发送录音

- (void)sendRecord
{
    if (self.isRecordSuccess) {
        //可以发送，发送完成之后需要隐藏
        if (self.completion) {
            self.completion(self.recordFileURL, nil);
        }
        
    }else{
        //录音错误不可发送
        NSError *error = [NSError errorWithDomain:@"录音错误" code:-1 userInfo:nil];
        if (self.completion) {
            self.completion(nil, error);
        }
    }
}

#pragma mark - RecordWaveViewDelegate

- (void)recordDidTimedOut
{
    [self.recorder stopRecord];
}

#pragma mark - public method 

- (void)didRecordCompletion:(DidRecordCompletion)completion
{
    self.completion = completion;
}


#pragma mark - private method

- (void)setupWidget
{
    [self addSubview:self.stateLabel];
    [self addSubview:self.speekImgView];
    [self addSubview:self.tipLabel];
    self.recorder = [[WDRecorder alloc]init];
    __weak typeof(self) weakSelf = self;
    [self.recorder addAudioPowerListener:^(float audioPower) {
        __strong typeof(self) strongSelf = weakSelf;
        [strongSelf.recordWaveView updateVoice:audioPower];
    }];
    [self.recorder didRecordFailed:^(NSError *error) {
        __strong typeof(self) strongSelf = weakSelf;
        DDLog(@"%@",error.localizedDescription);
        strongSelf.isRecordSuccess = NO;
        [self sendRecord];
    }];
    [self.recorder didRecordSucceed:^(NSURL *filePath, NSTimeInterval recordTime) {
        __strong typeof(self) strongSelf = weakSelf;
        DDLog(@"录音成功");
        strongSelf.isRecordSuccess = YES;
        strongSelf.recordFileURL = filePath;
        [self sendRecord];
    }];
}

- (void)makeRecordUI
{
    [self.tipLabel removeFromSuperview];
    if ([self.subviews containsObject:self.verticalLineView] == NO) {
        [self addSubview: self.verticalLineView];
    }
    if ([self.subviews containsObject:self.deleteImgView] == NO) {
        [self addSubview:self.deleteImgView];
    }
    [self bringSubviewToFront:self.speekImgView];
    self.stateLabel.text = @"松手发送";
    if ([self.subviews containsObject:self.recordWaveView] == NO) {
        [self addSubview:self.recordWaveView];
    }
}

#pragma mark - touch action

- (void)speekButtonTouchDown
{
    if ([self.recorder canRecord] == NO) {
        UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"未获得授权使用麦克风" message:@"请在\"设置\"->\"隐私\"->\"麦克风\"中打开" delegate:nil cancelButtonTitle:@"知道了" otherButtonTitles:nil, nil];
        [alert show];
        return;
    }
    //开始录音
    self.speekImgView.highlighted = YES;
    //1、出现录音界面
    [self makeRecordUI];
    //2、开始录音
    [self.recorder startRecord];
    [self.recordWaveView restartTimer];
}

- (void)speekButtonTouchUp
{
    //结束录音
    self.speekImgView.highlighted = NO;
    [self.recorder stopRecord];
    [self.recordWaveView pauseTiemr];
    self.stateLabel.text = @"按住说话";
    
}

#pragma mark - tuoch event

- (void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
{
    UITouch *touch = [touches anyObject];
    CGPoint touchPoint = [touch locationInView:self];
    if (CGRectContainsPoint(self.speekImgView.frame, touchPoint)) {
        //点中了录音按钮
        [self speekButtonTouchDown];
    }
}

- (void)touchesMoved:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
{
    UITouch *touch = [touches anyObject];
    CGPoint touchPoint = [touch locationInView:self];
    if (CGRectContainsPoint(self.deleteImgView.frame, touchPoint)) {
        self.deleteImgView.highlighted = YES;
    }else{
        self.deleteImgView.highlighted = NO;
    }
}

- (void)touchesEnded:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
{
    if (self.deleteImgView.highlighted) {
        //取消发送
        self.deleteImgView.highlighted = NO;
        [self.deleteImgView removeFromSuperview];
        [self.recordWaveView removeFromSuperview];
        [self.verticalLineView removeFromSuperview];
        [self addSubview:self.tipLabel];
        if (self.speekImgView.highlighted) {
            self.speekImgView.highlighted = NO;
            [self speekButtonTouchUp];
        }
    }else{
        //发送录音
        if (self.speekImgView.highlighted) {
            self.speekImgView.highlighted = NO;
            [self speekButtonTouchUp];
            
//            [self sendRecord];
        }
    }
    
}

#pragma mark - getter

- (UILabel *)stateLabel
{
    if (_stateLabel == nil) {
        _stateLabel = [[UILabel alloc]initWithFrame:CGRectMake(0, 59, Screen_Width, 15)];
        _stateLabel.textAlignment = NSTextAlignmentCenter;
        _stateLabel.font = [UIFont systemFontOfSize:12];
        _stateLabel.textColor = [UIColor colorWithHex:0x578bc7];
        _stateLabel.text = @"按住说话";
    }
    return _stateLabel;
}

- (UIImageView *)speekImgView
{
    if (_speekImgView == nil) {
        _speekImgView = [[UIImageView alloc]initWithImage:[UIImage imageNamed:@"maikefeng_x2"] highlightedImage:[UIImage imageNamed:@"maikefeng_down_x2"]];
        _speekImgView.frame = CGRectMake(Screen_Width / 2 - 40, self.stateLabel.maxY + 15, 80, 80);
    }
    return _speekImgView;
}

- (UILabel *)tipLabel
{
    if (_tipLabel == nil) {
        _tipLabel = [[UILabel alloc]initWithFrame:CGRectMake(0, self.speekImgView.maxY + 38, Screen_Width, 18)];
        _tipLabel.textAlignment = NSTextAlignmentCenter;
        _tipLabel.font = [UIFont systemFontOfSize:14];
        _tipLabel.textColor = [UIColor colorWithHex:0xFD3290];
        _tipLabel.text = @"请告诉警方你在哪，发生了什么";
    }
    return _tipLabel;
}

- (UIView *)verticalLineView
{
    if (_verticalLineView == nil) {
        _verticalLineView = [[UIView alloc]initWithFrame:CGRectMake(Screen_Width / 2.0 - 0.5, self.speekImgView.maxY - 20, 1, 22 + 20)];
        _verticalLineView.backgroundColor = [UIColor colorWithHex:0x9DA5BB];
    }
    return _verticalLineView;
}

- (UIImageView *)deleteImgView
{
    if (_deleteImgView == nil) {
        _deleteImgView = [[UIImageView alloc]initWithFrame:CGRectMake(Screen_Width / 2.0 - 25, self.verticalLineView.maxY, 50, 50)];
        [_deleteImgView setImage:[UIImage imageNamed:@"sanchu01_x2"]];
        [_deleteImgView setHighlightedImage:[UIImage imageNamed:@"sanchu02_x2"]];
    }
    return _deleteImgView;
}

- (RecordWaveView *)recordWaveView
{
    if (_recordWaveView == nil) {
        _recordWaveView = [[RecordWaveView alloc]initWithFrame:CGRectMake(Screen_Width / 2 - 120, 28, 0, 0)];
        _recordWaveView.delegate = self;
        _recordWaveView.backgroundColor = [UIColor whiteColor];
    }
    return _recordWaveView;
}

@end
